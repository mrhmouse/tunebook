 tunebook
============================================================
this program compiles tune definitions to raw monophonic PCM
files with signed 16-bit depth, at a sample rate of 48kHz

it accepts no arguments, reads from stdin, and writes to
multiple audio files in the working directory

 rendering a tunebook
------------------------------------------------------------
 the following code will produce one raw audio file per song
 in the tunebook defined at "your_file.txt"

     tunebook < your_file.txt

 playing files
------------------------------------------------------------
 the raw audio files produced are signed 16-bit depth at a
 sample rate of 48kHz, so they can be converted first to any
 other format, or they can be played as-is by telling your
 audio software what the sample depth and rate are

     aplay -f S16_LE -r 48000 "song title.l16"

 syntax
============================================================
 ()       keyword    "string"
 7\12	1234	3/2	-1\2

 keywords are written exactly as shown

 strings are enclosed in double quotes, and may contain any
 character except for double quote; caveat that some string
 values are used as filenames, such as song titles

 numbers, which may be negative, come in three forms:
 - integers, written in base ten
 - fractions, written as two integers separated by the
   slash character /
 - exponential ratios, written as two integers separated by
   the backslash character \

 exponential ratios represent a number which is the current
 base raised to the given fraction, e.g. 7\12 represents the
 number 2**(7/12), which is the 12-tone perfect fifth

 chords are numbers (or in special circumstances, strings)
 which are surrounded by parentheses () and intended to be
 played simultaneously, e.g. (1 5/4 3/2) is the 5-limit
 major chord

 keywords
============================================================
 add      am         attack       base
 decay    detune     fm           groove
 hz       instrument modulate     noise
 pm	  release    repeat       r
 rest	  root       saw	  section
 sin	  sine       song         sqr
 square	  sub        sustain      tempo
 tri	  triangle   voice	  volume

 key
 - [O] command follows an oscillator declaration
 - [I] command follows an instrument declaration
 - [S] command follows a song declaration
 - [V] command follows a voice declaration
 - [T] command can appear anywhere (toplevel)

 add                                                     [O]
------------------------------------------------------------
 add the current oscillator to the target oscillators, given
 as a chord, instead of sending the oscillator to output

     add ("main")

 am                                                      [O]
------------------------------------------------------------
 use the current oscillator as amplitude modulator for the
 target oscillators, given as a chord, instead of sending
 the oscillator to output

     am ("main")

 attack                                                  [O]
------------------------------------------------------------
 set the attack time for the current oscillator to the given
 fraction of a beat

     attack 1/128

 base                                                    [V]
------------------------------------------------------------
 set the numerical base used for exponential fractions for
 the current voice; defaults to 2 if not explicitly set

     base 3/2

 decay                                                   [O]
------------------------------------------------------------
 set the decay time for the current oscillator to the given
 fraction of a beat

     decay 1/2

 detune                                                  [O]
------------------------------------------------------------
 set the detune modifier for the current oscillator; default
 value is 1 if not explicitly set

 fm                                                      [O]
------------------------------------------------------------
 use the current oscillator as frequency modulator for the
 target oscillators, given as a chord, instead of sending
 the oscillator to output

     fm ("main" "higher harmonics")

 groove                                                  [V]
------------------------------------------------------------
 set a list of beat modifiers to use as the groove for the
 current voice; defaults to (1) if not explicitly set

     groove (2/3 1/3)

 hz                                                      [O]
------------------------------------------------------------
 set the exact frequency of the current oscillator, ignoring
 all note values; unused if not explicitly set

     hz 60

 instrument                                              [T]
------------------------------------------------------------
 start defining a new instrument, named by the given string

     instrument "vaporwave strings"

 modulate                                                [V]
------------------------------------------------------------
 change the root for the current voice by the given ratio

     modulate 2/3

 noise                                                   [I]
------------------------------------------------------------
 start defining a new oscillator for the current instrument,
 named by the given string, using a digital noise generator

     noise "cymbal"

 pm                                                      [O]
------------------------------------------------------------
 use the current oscillator as phase modulator for the
 target oscillators, given as a chord, instead of sending
 the oscillator to output

     pm ("main")

 release                                                 [O]
------------------------------------------------------------
 set the release time for the current oscillator to the
 given fraction of a beat

     release 1/3

 repeat                                                  [V]
------------------------------------------------------------
 repeat the current section the given number of times

     repeat 3

 r                                                       [V]
------------------------------------------------------------
 rest                                                    [V]
------------------------------------------------------------
 rest for a beat without playing anything

     rest

 root                                                    [S]
------------------------------------------------------------
 set the root frequency for the current song in Hertz

     root 440

 saw                                                     [I]
------------------------------------------------------------
 start defining a new oscillator for the current instrument,
 named by the given string, using a saw wave generator

     saw "strings"

 section                                                 [V]
------------------------------------------------------------
 start a new section, which can nest within other sections

     section

 sin                                                     [I]
------------------------------------------------------------
 sine                                                    [I]
------------------------------------------------------------
 start defining a new oscillator for the current instrument,
 named by the given string, using a sine wave generator

     sine "bell"

 song                                                    [T]
------------------------------------------------------------
 start defining a new song, named by the given string

     song "hello world"

 sqr                                                     [I]
------------------------------------------------------------
 square                                                  [I]
------------------------------------------------------------
 start defining a new oscillator for the current instrument,
 named by the given string, using a square wave generator

     square "lead"

 sub                                                     [O]
------------------------------------------------------------
 subtract the current oscillator from the target oscillators
 instead of sending the oscillator to output

     sub ("main")

 sustain                                                 [O]
------------------------------------------------------------
 set the sustain modifier for the current oscillator

     sustain 1/2

 tempo                                                   [S]
------------------------------------------------------------
 set the beats per minute for the current song

     tempo 120

 tri                                                     [I]
------------------------------------------------------------
 triangle                                                [I]
------------------------------------------------------------
 start defining a new oscillator for the current instrument,
 named by the given string, using a triangle wave generator

     triangle "NES bass"

 voice                                                   [S]
------------------------------------------------------------
 start defining a new voice for the current song, using the
 instrument given by the next string

     voice "funk bass"

 volume                                                  [O]
------------------------------------------------------------
 set the volume for the current oscillator, where 1 is the
 full amplitude available

     volume 1/16
